%-- SASnatch and mixed models
\documentclass[10pt]{article}
\usepackage{longtable}
\begin{document}
\section{Using SASnatch}
\subsection{Installation}

SASnatch is available on github and can be installed using the \verb!devtools! in R:
<<ff-packages, cache=FALSE, message=FALSE, eval = FALSE, include = TRUE>>=
   require('devtools')
   install_github('SASnatch','imouzon',arg='-l U://Documents/R/win-library/3.0')
@

\subsection{Setting up a .rnw file}
SASnatch requires knitr to run
<<require-packages, cache=FALSE, message=FALSE, include = TRUE>>=
   require('knitr')
   require('SASnatch')
   require('XML')
   require('xtable')
   require('ggplot2')
@
and the following set in any chunk before the first SASnatch chunk:
<<SASnatch-settings, cache=FALSE, message=FALSE, include = TRUE>>=
   path_to_SAS.EXE <<- '"C:/Program Files/SASHome/SASFoundation/9.3/sas.exe"'
   knit_hooks$set(SASnatch = SASnatch_hook)
@
where \verb!path_to_SAS.EXE! is the full path to the version of SAS installed on your machine.
The hook \verb!SASnatch = SASnatch_hook! allows for SASnatch to work as a hook option.
At this point you are ready to use SASnatch.


\section{SASnatch and mixed models}

There is an example of using plan a mixed model on Dr. Dixon's STAT 402A webpage:
\centerline{\verb!ttp://www.public.iastate.edu/~pdixon/stat402/!}
We can already see that there is some advantage to suing SASnatch in the 
way that data is read into the program. While SAS can read data from webpages, I
have never had a class where the method was even mentioned, and I suppose that 
most students in upper level statistics courses could be unaware of this ability.
However, reading R from a webpage is both simple to do and ensures that the data step can 
be written generally. Thus we replace the SAS code:

\begin{verbatim}
   data salinity;
   infile 'salinity.txt' firstobs = 2;
   /* on a pc: 
   infile 'c:/Documents and Settings/pdixon.IASTATE/Desktop/salinity.txt'
      firstobs =  2;   */
      
   input trt $ container plant weight;
\end{verbatim}

%-- readSalinity: R code (Code in Document)
<<readSalinity, echo=TRUE, cache=TRUE, include = TRUE>>=
   salinity <- read.table('http://www.public.iastate.edu/~pdixon/stat402/data/salinity.txt',header=TRUE)
@

To describe the data, we may want to create some simple plots. Since there is no 
situation I can thing of where a SAS plot is preferable to an R plot, we
replace
\begin{verbatim}
   proc plot;
   plot weight*container = trt;
   title 'Barley response to salinity';
\end{verbatim}
with
%-- procPlot: R plot (results in document)
<<procPlot, fig.width=5, fig.height=5, echo=TRUE>>=
   qplot(trt,weight,color=factor(container),data=salinity,main='Barley response to salinity')
@
We would now like to fix a mixed model with container as a random effect. This 
could be done using SAS. Since we want to get output back from SASnatch, we need to 
add an output statement:
%-- SASmixed: R code (Code in Document)
<<SASmixed, SASnatch = c('salinity','salinity'), eval=FALSE, echo=FALSE, cache=FALSE, include = TRUE>>=
   proc mixed method = type3 data = salinity; class trt container; model weight = trt; random container(trt); lsmeans trt; run;
@

which gives us the following:
%-- Rmixed: R code (Code in Document)

\begin{verbatim}
\Sexpr{SASmixed.snatch@code}
\end{verbatim}

<<Rmixed, results='asis',echo=TRUE, cache=TRUE, include = TRUE>>=
   printSASnatch(SASmixed.snatch,type='TeX')
@

%-- SASmixed: R code (Code in Document)
<<SASmixed2, SASnatch = c('salinity','salinity'), eval=FALSE, echo=FALSE, cache=FALSE, include = TRUE>>=
   proc mixed method = type3; class trt container; model weight = trt; random container(trt); lsmeans trt; run;
@

which gives us the following:

\begin{verbatim}
\Sexpr{SASmixed2.snatch@code}
\end{verbatim}
%-- Rmixed: R code (Code in Document)
<<Rmixed2, echo=TRUE, cache=TRUE, include = TRUE>>=
   printSASnatch(SASmixed2.snatch,type='TeX')
@
  
We know that to get the REML estimates we must remove \verb!method = type3! from the results:
<<SASmixed3, SASnatch = c('salinity','salinity'), eval=FALSE, echo=FALSE, cache=FALSE, include = TRUE>>=
   proc mixed method = type3; class trt container plant; model weight = trt; random container(trt) plant(container*trt); title '1) Specifying three levels of variability'; run; 
@
  
\begin{verbatim}
\Sexpr{SASmixed3.snatch@code}
\end{verbatim}

%-- Rmixed: R code (Code in Document)
<<Rmixed3, echo=TRUE, cache=TRUE, include = TRUE>>=
   printSASnatch(SASmixed3.snatch,type='TeX')
@

<<SASmixed4, SASnatch = c('salinity','salinity'), eval=FALSE, echo=FALSE, cache=FALSE, include = TRUE>>=
proc mixed; class trt container; model weight = trt; random container(trt); lsmeans trt; run;
@
  
\begin{verbatim}
\Sexpr{SASmixed4.snatch@code}
\end{verbatim}

<<Rmixed4, echo=TRUE, cache=TRUE, include = TRUE>>=
   printSASnatch(SASmixed4.snatch,type='TeX')
@

\begin{verbatim}
\Sexpr{SASmixed4.snatch@code}
\end{verbatim}

<<SASmixed5, SASnatch = c('salinity','salinity'), eval=FALSE, echo=FALSE, cache=FALSE, include = TRUE>>=
proc sort data = salinity; by trt  container; proc means noprint; by trt container; var weight; output out = means mean = wtmean; run; proc print; title 'Container means'; run; proc glm; class trt; model wtmean = trt; lsmeans trt; title '3) GLM on container means'; run; /* syntax where do not have treatments, only samples and subsamples */ data salinity1; set salinity; if trt = 'l'; /* keep only the low salinity values */ proc mixed method = type3; class container; model weight =  ; random container; estimate 'mean' intercept 1; run;
@
     
\begin{verbatim}
\Sexpr{SASmixed5.snatch@code}
\end{verbatim}

<<Rmixed5, echo=TRUE, cache=TRUE, include = TRUE>>=
   printSASnatch(SASmixed5.snatch,type='TeX')
@

\end{document}
