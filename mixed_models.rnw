% For LaTeX-Box: root = 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  File Name:
%  Purpose:
%
%  Creation Date: 28-04-2014
%  Last Modified: Mon Apr 28 13:06:08 2014
%  Created By:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%-- Set parent file
<<set-parent, echo=FALSE, cache=FALSE, include = TRUE>>=
   #set up knitr
   source('knitrSetup.r')
   knitrSetup(rootDir='U:/Desktop/SASnatch_examples/salinity')

   #set up file locations
   file.directory = getwd()
   setwd(file.directory)
   set_parent('main-SASnatch-document.rnw')
@

\renewcommand{\Semester}{Spring 2014}
\groupleaderinfo{Iowa State University Department of Statistics}{STAT@IASTATE}
\groupspecinfo{STAT 402A}{Statistical Design and Analysis of Experiments}{}


%-- title page and quote
\titleheader{Using SASnatch with mixed models and proc mixed}

we load the packages:
%-- loadSASnatch: R code (Code in Document)
<<loadSASnatch, echo=TRUE, cache=FALSE, include = TRUE>>=
   library(ggplot2)
   library(xtable)
   library(XML)
   library(SASnatch)
@

There is an example of using plan a mixed model on Dr. Dixon's STAT 402A webpage:
\centerline{\verb!ttp://www.public.iastate.edu/~pdixon/stat402/!}
We can already see that there is some advantage to suing SASnatch in the 
way that data is read into the program. While SAS can read data from webpages, I
have never had a class where the method was even mentioned, and I suppose that 
most students in upper level statistics courses could be unaware of this ability.
However, reading R from a webpage is both simple to do and ensures that the data step can 
be written generally. Thus we replace the SAS code:

\begin{verbatim}
   data salinity;
   infile 'salinity.txt' firstobs = 2;
   /* on a pc: 
   infile 'c:/Documents and Settings/pdixon.IASTATE/Desktop/salinity.txt'
      firstobs =  2;   */
      
   input trt $ container plant weight;
\end{verbatim}

%-- readSalinity: R code (Code in Document)
<<readSalinity, echo=TRUE, cache=TRUE, include = TRUE>>=
   salinity <- read.table('http://www.public.iastate.edu/~pdixon/stat402/data/salinity.txt',header=TRUE)
@

To describe the data, we may want to create some simple plots. Since there is no 
situation I can thing of where a SAS plot is preferable to an R plot, we
replace
\begin{verbatim}
   proc plot;
   plot weight*container = trt;
   title 'Barley response to salinity';
\end{verbatim}
with
%-- procPlot: R plot (results in document)
<<procPlot, fig.width=5, fig.height=5, echo=TRUE>>=
   qplot(trt,weight,color=factor(container),data=salinity,main='Barley response to salinity')
@
We would now like to fix a mixed model with container as a random effect. This 
could be done using SAS. Since we want to get output back from SASnatch, we need to 
add an output statement:
%-- SASmixed: R code (Code in Document)
<<SASmixed, SASnatch = c('salinity',''), eval=FALSE, echo=TRUE, cache=FALSE, include = TRUE>>=
   proc mixed method = type3 data = salinity; class trt container; model weight = trt; random container(trt); lsmeans trt; run;
@

which gives us the following:
%-- Rmixed: R code (Code in Document)
<<Rmixed, echo=TRUE, cache=TRUE, include = TRUE>>=
   SASmixed.res@results@R[[1]][[1]]
@

